{"version":3,"file":"static/js/100.c4b6b645.chunk.js","mappings":"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","sources":["../../TicTacToeChess-shared/dist/AI/TicTacToeAI.js","../../TicTacToeChess-shared/dist/AI/UTicTacToeAI.js","../../TicTacToeChess-shared/dist/gameLogic/chess.js","../../TicTacToeChess-shared/dist/gameLogic/ticTacToe.js","../../TicTacToeChess-shared/dist/gameLogic/uTicTacToe.js","../../TicTacToeChess-shared/dist/index.js","../../TicTacToeChess-shared/dist/types/sockets.js","../../TicTacToeChess-shared/dist/types/types.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.suggestTicTacToeMove = exports.getMaxLineLength = void 0;\r\nconst ticTacToe_1 = require(\"../gameLogic/ticTacToe\");\r\nconst isOutOfBounds = ([X, Y], size) => {\r\n    if (X < 0 || X >= size ||\r\n        Y < 0 || Y >= size)\r\n        return true;\r\n    return false;\r\n};\r\nconst lines = [\r\n    [([x, y], i) => [x + i, y], ([x, y], i) => [x - i, y]],\r\n    [([x, y], i) => [x + i, y + i], ([x, y], i) => [x - i, y - i]],\r\n    [([x, y], i) => [x, y + i], ([x, y], i) => [x, y - i]],\r\n    [([x, y], i) => [x - i, y + i], ([x, y], i) => [x + i, y - i]]\r\n];\r\nconst getLineLength = (line, origin, board) => {\r\n    const [X, Y] = origin;\r\n    const side = board[X][Y];\r\n    if (!side)\r\n        return 0;\r\n    let length = 1;\r\n    line.forEach(dir => {\r\n        let pos = [X, Y];\r\n        for (let i = 1; i < board.length; i++) {\r\n            pos = dir([X, Y], i);\r\n            if (isOutOfBounds(pos, board.length) ||\r\n                board[pos[0]][pos[1]] !== side)\r\n                break;\r\n            length += 1;\r\n        }\r\n    });\r\n    return length;\r\n};\r\n// returns length of longest line in position\r\nconst getMaxLineLength = (origin, board) => {\r\n    let maxLength = 0;\r\n    lines.forEach(line => {\r\n        const length = getLineLength(line, origin, board);\r\n        maxLength = Math.max(maxLength, length);\r\n    });\r\n    return maxLength;\r\n};\r\nexports.getMaxLineLength = getMaxLineLength;\r\nconst evaluateState = (board) => {\r\n    let scoreX = 0;\r\n    let scoreO = 0;\r\n    board.forEach((row, X) => row.forEach((square, Y) => {\r\n        const maxLength = (0, exports.getMaxLineLength)([X, Y], board);\r\n        if (square === 'O')\r\n            scoreO = Math.max(scoreO, maxLength);\r\n        if (square === 'X')\r\n            scoreX = Math.max(scoreX, maxLength);\r\n    }));\r\n    return scoreO - scoreX;\r\n};\r\nconst isBoardEmpty = (board) => {\r\n    for (let i = 0; i < board.length; i++) {\r\n        for (let j = 0; j < board.length; j++) {\r\n            if (board[i][j])\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\nconst isMoveViable = (X, Y, board) => {\r\n    const isPosNonEmpty = (X, Y) => {\r\n        return Boolean(!isOutOfBounds([X, Y], board.length) && board[X][Y]);\r\n    };\r\n    return (board[X][Y] === null &&\r\n        (isPosNonEmpty(X + 1, Y) ||\r\n            isPosNonEmpty(X + 1, Y + 1) ||\r\n            isPosNonEmpty(X, Y + 1) ||\r\n            isPosNonEmpty(X - 1, Y + 1) ||\r\n            isPosNonEmpty(X - 1, Y) ||\r\n            isPosNonEmpty(X - 1, Y - 1) ||\r\n            isPosNonEmpty(X, Y - 1) ||\r\n            isPosNonEmpty(X + 1, Y - 1)));\r\n};\r\nconst suggestTicTacToeMove = ({ board, activePlayer, winCondition = Math.floor(board.length / 2), skill = Infinity }) => {\r\n    const size = board.length;\r\n    if (!winCondition)\r\n        winCondition = size <= 5 ? 3 : 5;\r\n    const game = new ticTacToe_1.TicTacToeGame(size, winCondition, activePlayer);\r\n    game.updateState({\r\n        board: structuredClone(board),\r\n        activePlayer,\r\n        winner: null,\r\n        winSegments: [],\r\n    });\r\n    return minimax(game, skill, activePlayer === 'O', true);\r\n};\r\nexports.suggestTicTacToeMove = suggestTicTacToeMove;\r\nconst minimax = (instance, length, maximizing, isFirstIteration, alpha = -Infinity, beta = Infinity) => {\r\n    if (isFirstIteration && isBoardEmpty(instance.state.board))\r\n        return {\r\n            X: Math.floor(instance.state.board.length / 2),\r\n            Y: Math.floor(instance.state.board.length / 2)\r\n        };\r\n    if (instance.state.winner || length === 0) {\r\n        let output = 0;\r\n        if (instance.winner)\r\n            output = instance.winner === 'O' ? Infinity : -Infinity;\r\n        else\r\n            output = evaluateState(instance.state.board);\r\n        instance.revert();\r\n        return output;\r\n    }\r\n    const viableMoves = [];\r\n    instance.state.board.forEach((row, X) => row.forEach((square, Y) => {\r\n        if (isMoveViable(X, Y, instance.state.board))\r\n            viableMoves.push({ X, Y });\r\n    }));\r\n    if (maximizing) {\r\n        let bestMove = viableMoves[0];\r\n        let max = -Infinity;\r\n        for (let i = 0; i < viableMoves.length; i++) {\r\n            const move = viableMoves[i];\r\n            instance.move(move, 'O');\r\n            const value = minimax(instance, length - 1, false, false, alpha, beta);\r\n            if (value > alpha)\r\n                alpha = value;\r\n            if (value > max) {\r\n                max = value;\r\n                bestMove = move;\r\n            }\r\n            if (alpha >= beta) {\r\n                instance.revert();\r\n                return value;\r\n            }\r\n        }\r\n        instance.revert();\r\n        if (isFirstIteration)\r\n            return bestMove;\r\n        return max;\r\n    }\r\n    else {\r\n        let bestMove = viableMoves[0];\r\n        let min = Infinity;\r\n        for (let i = 0; i < viableMoves.length; i++) {\r\n            const move = viableMoves[i];\r\n            instance.move(move, 'X');\r\n            const value = minimax(instance, length - 1, true, false, alpha, beta);\r\n            if (value < beta)\r\n                beta = value;\r\n            if (value < min) {\r\n                min = value;\r\n                bestMove = move;\r\n            }\r\n            if (alpha >= beta) {\r\n                instance.revert();\r\n                return value;\r\n            }\r\n        }\r\n        instance.revert();\r\n        if (isFirstIteration)\r\n            return bestMove;\r\n        return min;\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.suggestUTicTacToeMove = void 0;\r\nconst TicTacToeAI_1 = require(\"./TicTacToeAI\");\r\nconst suggestUTicTacToeMove = ({ board, activeSegment, activePlayer, segmentBoard }) => {\r\n    if (activeSegment) {\r\n        const [SX, SY] = activeSegment;\r\n        const { X, Y } = (0, TicTacToeAI_1.suggestTicTacToeMove)({ board: board[SX][SY], activePlayer, winCondition: 3 });\r\n        return { SX, SY, X, Y };\r\n    }\r\n    const potentialSegments = [];\r\n    segmentBoard.forEach((SRow, SX) => SRow.forEach((SSquare, SY) => {\r\n        if (SSquare)\r\n            return;\r\n        potentialSegments.push({ coord: [SX, SY] });\r\n    }));\r\n    const randIndex = Math.floor(Math.random() * potentialSegments.length);\r\n    const [SX, SY] = potentialSegments[randIndex].coord;\r\n    const { X, Y } = (0, TicTacToeAI_1.suggestTicTacToeMove)({ board: board[SX][SY], activePlayer, winCondition: 3 });\r\n    return { SX, SY, X, Y };\r\n};\r\nexports.suggestUTicTacToeMove = suggestUTicTacToeMove;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ChessGame = void 0;\r\nclass ChessGame {\r\n    get state() {\r\n        return structuredClone({\r\n            board: this.board,\r\n            activePlayer: this.activePlayer,\r\n            winner: this.winner,\r\n            figuresTaken: this.figuresTaken,\r\n            lastMove: this.lastMove,\r\n            castlingAvailable: this.castlingAvailable,\r\n        });\r\n    }\r\n    constructor() {\r\n        this.createDefaulState = () => {\r\n            return structuredClone({\r\n                board: this.createBoard(),\r\n                activePlayer: 'w',\r\n                castlingAvailable: {\r\n                    w: {\r\n                        left: true,\r\n                        right: true\r\n                    },\r\n                    b: {\r\n                        left: true,\r\n                        right: true\r\n                    }\r\n                },\r\n                winner: null,\r\n                figuresTaken: {\r\n                    b: [],\r\n                    w: []\r\n                }\r\n            });\r\n        };\r\n        this.diagonal = [\r\n            ([X, Y], i) => [X + i, Y + i],\r\n            ([X, Y], i) => [X + i, Y - i],\r\n            ([X, Y], i) => [X - i, Y + i],\r\n            ([X, Y], i) => [X - i, Y - i],\r\n        ];\r\n        this.orthogonal = [\r\n            ([X, Y], i) => [X + i, Y],\r\n            ([X, Y], i) => [X - i, Y],\r\n            ([X, Y], i) => [X, Y + i],\r\n            ([X, Y], i) => [X, Y - i],\r\n        ];\r\n        this.knight = [\r\n            ([X, Y], i) => [X - 2 * i, Y + 1 * i],\r\n            ([X, Y], i) => [X - 2 * i, Y - 1 * i],\r\n            ([X, Y], i) => [X + 1 * i, Y + 2 * i],\r\n            ([X, Y], i) => [X - 1 * i, Y + 2 * i],\r\n            ([X, Y], i) => [X + 2 * i, Y + 1 * i],\r\n            ([X, Y], i) => [X + 2 * i, Y - 1 * i],\r\n            ([X, Y], i) => [X + 1 * i, Y - 2 * i],\r\n            ([X, Y], i) => [X - 1 * i, Y - 2 * i],\r\n        ];\r\n        this.pieceDirs = {\r\n            k: [...this.diagonal, ...this.orthogonal],\r\n            q: [...this.diagonal, ...this.orthogonal],\r\n            r: this.orthogonal,\r\n            b: this.diagonal,\r\n            n: this.knight,\r\n            p: [],\r\n            e: []\r\n        };\r\n        this.board = this.createBoard();\r\n        this.activePlayer = 'w';\r\n        this.castlingAvailable = {\r\n            w: {\r\n                left: true,\r\n                right: true\r\n            }, b: {\r\n                left: true,\r\n                right: true\r\n            }\r\n        };\r\n        this.winner = null;\r\n        this.figuresTaken = {\r\n            b: [],\r\n            w: []\r\n        };\r\n        this.history = {\r\n            stateList: [this.createDefaulState()],\r\n            currentIndex: 0\r\n        };\r\n        this.halfmoveClock = 0;\r\n        this.convertCoord = (() => {\r\n            const boardLetters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n            return {\r\n                numericToConventional: ([X, Y]) => {\r\n                    return (boardLetters[Y] + String(7 - X + 1));\r\n                },\r\n                conventionalToNumeric: (coord) => {\r\n                    return [7 - (+coord[1] - 1), boardLetters.indexOf(coord[0])];\r\n                }\r\n            };\r\n        })();\r\n    }\r\n    getFEN() {\r\n        let positions = '';\r\n        this.board.forEach((row, rowIndex) => {\r\n            let emptyCount = 0;\r\n            row.forEach(square => {\r\n                if (square === 'ee') {\r\n                    emptyCount++;\r\n                    return;\r\n                }\r\n                let piece = square[0] === 'b' ? square[1] : square[1].toUpperCase();\r\n                if (emptyCount > 0)\r\n                    piece = emptyCount + piece;\r\n                positions += piece;\r\n                emptyCount = 0;\r\n            });\r\n            if (emptyCount > 0)\r\n                positions += emptyCount;\r\n            if (rowIndex !== 7)\r\n                positions += '/';\r\n        });\r\n        let castling = '';\r\n        if (this.castlingAvailable.w.right)\r\n            castling += 'K';\r\n        if (this.castlingAvailable.w.left)\r\n            castling += 'Q';\r\n        if (this.castlingAvailable.w.right)\r\n            castling += 'k';\r\n        if (this.castlingAvailable.w.left)\r\n            castling += 'q';\r\n        if (!castling)\r\n            castling = '-';\r\n        let enPassant = '-';\r\n        if (this.lastMove) {\r\n            const [X, Y] = this.lastMove.to;\r\n            const distance = Math.abs(X - this.lastMove.from[0]);\r\n            if (this.board[X][Y][1] === 'p' &&\r\n                distance === 2) {\r\n                const coord = this.activePlayer === 'b' ? [5, Y] : [2, Y];\r\n                enPassant = this.convertCoord.numericToConventional(coord);\r\n            }\r\n        }\r\n        return `${positions} ${this.activePlayer} ${castling} ${enPassant} ${this.halfmoveClock} ${this.history.currentIndex % 2}`;\r\n    }\r\n    getLegalMoves([X, Y]) {\r\n        if (this.isOutOfBounds([X, Y]))\r\n            return [];\r\n        const AP = this.activePlayer;\r\n        const piece = this.board[X][Y];\r\n        if (piece[0] !== AP[0])\r\n            return [];\r\n        let moves = this.getPotentialMoves([X, Y]);\r\n        const boardSave = this.encodeBoard();\r\n        for (let [A, B] of moves) {\r\n            this._move([X, Y], [A, B]);\r\n            if (this.isCheck()) {\r\n                moves = moves.filter(coord => {\r\n                    return (coord[0] !== A || coord[1] !== B);\r\n                });\r\n            }\r\n            this.board = this.decodeBoard(boardSave);\r\n        }\r\n        if (piece[1] === 'k')\r\n            this.checkForCastling(piece[0], moves);\r\n        return moves;\r\n    }\r\n    move(move) {\r\n        const { from, to } = move;\r\n        const [X, Y] = from;\r\n        const [A, B] = to;\r\n        if (this.isOutOfBounds([X, Y]))\r\n            return;\r\n        if (this.isOutOfBounds([A, B]))\r\n            return;\r\n        const legalMoves = this.getLegalMoves([X, Y]);\r\n        let isLegal = false;\r\n        for (const [C, D] of legalMoves) {\r\n            if (C === A && D === B) {\r\n                isLegal = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!isLegal)\r\n            return;\r\n        const side = this.board[X][Y][0];\r\n        const piece = this.board[X][Y][1];\r\n        const opponent = side === 'w' ? 'b' : 'w';\r\n        if (opponent === this.activePlayer)\r\n            return;\r\n        if (piece === 'e')\r\n            return;\r\n        let pieceCaptured = this.board[A][B];\r\n        // checks here for En Passant move\r\n        if (piece === 'p' &&\r\n            Y + 1 === B &&\r\n            this.board[A][B] === 'ee') {\r\n            pieceCaptured = this.board[X][Y + 1];\r\n            this.board[X][Y + 1] = 'ee';\r\n        }\r\n        if (piece === 'p' &&\r\n            Y - 1 === B &&\r\n            this.board[A][B] === 'ee') {\r\n            pieceCaptured = this.board[X][Y - 1];\r\n            this.board[X][Y - 1] = 'ee';\r\n        }\r\n        this._move([X, Y], [A, B]);\r\n        if (piece === 'p' || pieceCaptured !== 'ee')\r\n            this.halfmoveClock = 0;\r\n        this.activePlayer = this.activePlayer === 'b' ? 'w' : 'b';\r\n        if (pieceCaptured !== 'ee')\r\n            this.figuresTaken[opponent].push(pieceCaptured);\r\n        this.lastMove = { from, to };\r\n        if (piece === 'k') {\r\n            this.castlingAvailable[side].left = false;\r\n            this.castlingAvailable[side].right = false;\r\n        }\r\n        if (piece === 'r' && Y === 0)\r\n            this.castlingAvailable[side].left = false;\r\n        if (piece === 'r' && Y === 7)\r\n            this.castlingAvailable[side].right = false;\r\n        this.checkForWinner();\r\n        const newState = this.state;\r\n        this.history.stateList.push(newState);\r\n        this.history.currentIndex += 1;\r\n    }\r\n    resetState() {\r\n        this.board = this.createBoard();\r\n        this.activePlayer = 'w';\r\n        this.castlingAvailable = {\r\n            w: {\r\n                left: true,\r\n                right: true\r\n            },\r\n            b: {\r\n                left: true,\r\n                right: true\r\n            }\r\n        };\r\n        this.winner = null;\r\n        this.figuresTaken = {\r\n            b: [],\r\n            w: []\r\n        };\r\n        this.history = {\r\n            stateList: [this.createDefaulState()],\r\n            currentIndex: 0\r\n        };\r\n        delete this.lastMove;\r\n    }\r\n    updateState(state, addToHistory) {\r\n        const stateClone = structuredClone(state);\r\n        this.board = stateClone.board;\r\n        this.activePlayer = stateClone.activePlayer;\r\n        this.figuresTaken = stateClone.figuresTaken;\r\n        this.lastMove = stateClone.lastMove;\r\n        this.castlingAvailable = stateClone.castlingAvailable;\r\n        if (!addToHistory)\r\n            return;\r\n        const index = ++this.history.currentIndex;\r\n        this.history.stateList.splice(index, Infinity, state);\r\n    }\r\n    forward() {\r\n        const newIndex = this.history.currentIndex + 1;\r\n        if (newIndex === this.history.stateList.length)\r\n            return;\r\n        this.history.currentIndex += 1;\r\n        const state = this.history.stateList[newIndex];\r\n        this.updateState(state);\r\n    }\r\n    backward() {\r\n        const newIndex = this.history.currentIndex - 1;\r\n        if (newIndex === -1)\r\n            return;\r\n        this.history.currentIndex -= 1;\r\n        const state = this.history.stateList[newIndex];\r\n        this.updateState(state);\r\n    }\r\n    fastForward() {\r\n        const newIndex = this.history.stateList.length - 1;\r\n        this.history.currentIndex = newIndex;\r\n        const state = this.history.stateList[newIndex];\r\n        this.updateState(state);\r\n    }\r\n    fastBackward() {\r\n        const state = this.history.stateList[0];\r\n        this.history.currentIndex = 0;\r\n        this.updateState(state);\r\n    }\r\n    canPlayerMove(side) {\r\n        for (let i = 0; i < 8; i++) {\r\n            for (let j = 0; j < 8; j++) {\r\n                if (this.board[i][j][0] === side) {\r\n                    const moves = this.getLegalMoves([i, j]);\r\n                    if (moves[0])\r\n                        return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isCheck() {\r\n        const side = this.activePlayer[0];\r\n        const kingCoord = this.getKingCoord(side);\r\n        return this.isPosEndangered(kingCoord);\r\n    }\r\n    checkForWinner() {\r\n        const APSide = this.activePlayer[0];\r\n        const hasLegalMoves = this.canPlayerMove(APSide);\r\n        if (hasLegalMoves)\r\n            return;\r\n        const check = this.isCheck();\r\n        if (check)\r\n            this.winner = APSide === 'w' ? 'b' : 'w';\r\n        else\r\n            this.winner = 'draw';\r\n    }\r\n    encodeBoard() {\r\n        let encodedBoard = '';\r\n        this.board.forEach(row => row.forEach(piece => {\r\n            encodedBoard += piece + '/';\r\n        }));\r\n        return encodedBoard;\r\n    }\r\n    decodeBoard(encodedBoard) {\r\n        const pieces = encodedBoard.split('/', 64);\r\n        const board = new Array(8).fill(null)\r\n            .map(() => new Array(8).fill(null));\r\n        pieces.forEach((piece, pieceIndex) => {\r\n            const row = Math.floor(pieceIndex / 8);\r\n            const column = pieceIndex % 8;\r\n            board[row][column] = piece;\r\n        });\r\n        return board;\r\n    }\r\n    _move(from, to) {\r\n        const [X, Y] = from;\r\n        const [A, B] = to;\r\n        const movingPiece = this.board[X][Y];\r\n        this.board[A][B] = movingPiece;\r\n        this.board[X][Y] = 'ee';\r\n        if (movingPiece === 'wp' &&\r\n            A === 0)\r\n            this.board[A][B] = 'wq';\r\n        if (movingPiece === 'bp' &&\r\n            A === 7)\r\n            this.board[A][B] = 'bq';\r\n        if (movingPiece[1] === 'k' && X === A) {\r\n            if (Y - B === -2)\r\n                this._move([X, 7], [X, 5]);\r\n            if (Y - B === 2)\r\n                this._move([X, 0], [X, 3]);\r\n        }\r\n    }\r\n    getKingCoord(side) {\r\n        for (let i = 0; i < 8; i++) {\r\n            for (let j = 0; j < 8; j++) {\r\n                if (this.board[i][j] === `${side}k`)\r\n                    return [i, j];\r\n            }\r\n        }\r\n    }\r\n    checkForCastling(side, list) {\r\n        if (side !== this.activePlayer[0])\r\n            return;\r\n        const rowIndex = 'b' === side ? 0 : 7;\r\n        if (this.castlingAvailable[side].right &&\r\n            this.board[rowIndex][5] === 'ee' &&\r\n            this.board[rowIndex][6] === 'ee' &&\r\n            this.board[rowIndex][7] === `${side}r` &&\r\n            !this.isPosEndangered([rowIndex, 4]) &&\r\n            !this.isPosEndangered([rowIndex, 5]) &&\r\n            !this.isPosEndangered([rowIndex, 6]))\r\n            list.push([rowIndex, 6]);\r\n        if (this.castlingAvailable[side].left &&\r\n            this.board[rowIndex][0] === `${side}r` &&\r\n            this.board[rowIndex][1] === 'ee' &&\r\n            this.board[rowIndex][2] === 'ee' &&\r\n            this.board[rowIndex][3] === 'ee' &&\r\n            !this.isPosEndangered([rowIndex, 1]) &&\r\n            !this.isPosEndangered([rowIndex, 2]) &&\r\n            !this.isPosEndangered([rowIndex, 3]) &&\r\n            !this.isPosEndangered([rowIndex, 4]))\r\n            list.push([rowIndex, 2]);\r\n    }\r\n    getPotentialMoves([X, Y]) {\r\n        if (this.isOutOfBounds([X, Y]))\r\n            return [];\r\n        const piece = this.board[X][Y];\r\n        let moveLimit = 8;\r\n        let moves = [];\r\n        if (piece[1] === 'e')\r\n            return [];\r\n        if (piece[1] === 'p')\r\n            return this.getPawnPotentialMoves([X, Y]);\r\n        if (piece[1] === 'n' ||\r\n            piece[1] === 'k')\r\n            moveLimit = 2;\r\n        for (let dir of this.pieceDirs[piece[1]]) {\r\n            const movesInDir = this.getMovesInDir(dir, [X, Y], moveLimit);\r\n            moves = [...moves, ...movesInDir];\r\n        }\r\n        return moves;\r\n    }\r\n    isPosEndangered([A, B]) {\r\n        const square = this.board[A][B];\r\n        const AP = this.activePlayer;\r\n        let enemy;\r\n        if (square === 'ee')\r\n            enemy = AP[0] === 'w' ? 'b' : 'w';\r\n        else\r\n            enemy = square[0] === 'w' ? 'b' : 'w';\r\n        let moves;\r\n        for (const [X, row] of Object.entries(this.board)) {\r\n            for (const [Y, square] of Object.entries(row)) {\r\n                if (square[0] === enemy) {\r\n                    moves = this.getPotentialMoves([+X, +Y]);\r\n                    for (let move of moves) {\r\n                        if (move[0] === A && move[1] === B)\r\n                            return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isOutOfBounds([X, Y]) {\r\n        return (X < 0 || Y < 0 || X > 7 || Y > 7);\r\n    }\r\n    getMovesInDir(moveInDir, [X, Y], limit) {\r\n        const [piece, board] = [this.board[X][Y], this.board];\r\n        const moves = [];\r\n        for (let i = 1; i < limit; i++) {\r\n            const [A, B] = moveInDir([X, Y], i);\r\n            if (this.isOutOfBounds([A, B]))\r\n                break;\r\n            if (board[A][B][0] === piece[0])\r\n                break;\r\n            moves.push([A, B]);\r\n            if (board[A][B] !== 'ee')\r\n                break;\r\n        }\r\n        return moves;\r\n    }\r\n    getPawnPotentialMoves([X, Y]) {\r\n        const moves = [];\r\n        const board = this.board;\r\n        const piece = this.board[X][Y];\r\n        if (piece[1] !== 'p')\r\n            return [];\r\n        const i = piece[0] === 'b' ? 1 : -1;\r\n        const enemy = piece[0] === 'b' ? 'w' : 'b';\r\n        if (!this.isOutOfBounds([X + i, Y]) &&\r\n            board[X + i][Y] === 'ee')\r\n            moves.push([X + i, Y]);\r\n        if (!this.isOutOfBounds([X + i, Y + 1]) &&\r\n            board[X + i][Y + 1][0] === enemy)\r\n            moves.push([X + i, Y + 1]);\r\n        if (!this.isOutOfBounds([X + i, Y - 1]) &&\r\n            board[X + i][Y - 1][0] === enemy)\r\n            moves.push([X + i, Y - 1]);\r\n        if (((piece[0] === 'w' && X === 6) ||\r\n            (piece[0] === 'b' && X === 1)) &&\r\n            board[X + i][Y] === 'ee' &&\r\n            board[X + 2 * i][Y] === 'ee')\r\n            moves.push([X + 2 * i, Y]);\r\n        if (this.history.currentIndex === 0)\r\n            return moves;\r\n        const [A, B] = this.lastMove.to;\r\n        const C = this.lastMove.from[0];\r\n        if (this.board[A][B] === `${enemy}p` &&\r\n            A === X && B === Y + 1 &&\r\n            Math.abs(A - C) === 2)\r\n            moves.push([X + i, Y + 1]);\r\n        if (this.board[A][B] === `${enemy}p` &&\r\n            A === X && B === Y - 1 &&\r\n            Math.abs(A - C) === 2)\r\n            moves.push([X + i, Y - 1]);\r\n        return moves;\r\n    }\r\n    createBoard() {\r\n        const board = new Array(8).fill(null)\r\n            .map(() => new Array(8).fill('ee'));\r\n        board[7][0] = 'wr';\r\n        board[7][1] = 'wn';\r\n        board[7][2] = 'wb';\r\n        board[7][3] = 'wq';\r\n        board[7][4] = 'wk';\r\n        board[7][5] = 'wb';\r\n        board[7][6] = 'wn';\r\n        board[7][7] = 'wr';\r\n        for (let k = 0; k < 8; k++)\r\n            board[6][k] = 'wp';\r\n        board[0][0] = 'br';\r\n        board[0][1] = 'bn';\r\n        board[0][2] = 'bb';\r\n        board[0][3] = 'bq';\r\n        board[0][4] = 'bk';\r\n        board[0][5] = 'bb';\r\n        board[0][6] = 'bn';\r\n        board[0][7] = 'br';\r\n        for (let k = 0; k < 8; k++)\r\n            board[1][k] = 'bp';\r\n        return board;\r\n    }\r\n}\r\nexports.ChessGame = ChessGame;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TicTacToeGame = void 0;\r\nclass TicTacToeGame {\r\n    constructor(size = 10, winCondition = 5, startingSide = 'O') {\r\n        this.dirs = [\r\n            [([x, y]) => [x + 1, y], ([x, y]) => [x - 1, y]],\r\n            [([x, y]) => [x + 1, y + 1], ([x, y]) => [x - 1, y - 1]],\r\n            [([x, y]) => [x, y + 1], ([x, y]) => [x, y - 1]],\r\n            [([x, y]) => [x - 1, y + 1], ([x, y]) => [x + 1, y - 1]]\r\n        ];\r\n        this.checkDir = (dir, prevMove, side) => {\r\n            const [X, Y] = dir(prevMove);\r\n            if (this.isOutOfBounds([X, Y]))\r\n                return prevMove;\r\n            if (this.board[X][Y] !== side)\r\n                return prevMove;\r\n            return this.checkDir(dir, [X, Y], side);\r\n        };\r\n        this.initNewBoard = (size) => {\r\n            return new Array(size).fill(null).map(_ => {\r\n                return new Array(size).fill(null);\r\n            });\r\n        };\r\n        if (winCondition > size)\r\n            throw new Error('win condition cannot be greater that side');\r\n        this.board = this.initNewBoard(size);\r\n        this.size = size;\r\n        this.winCondition = winCondition;\r\n        this.activePlayer = startingSide;\r\n        this.winner = null;\r\n        this.winSegments = [];\r\n        this.history = [];\r\n    }\r\n    get state() {\r\n        return structuredClone({\r\n            board: this.board,\r\n            activePlayer: this.activePlayer,\r\n            winner: this.winner,\r\n            winSegments: this.winSegments\r\n        });\r\n    }\r\n    resetState(startingSide = 'O') {\r\n        this.board = this.initNewBoard(this.size);\r\n        this.activePlayer = startingSide;\r\n        this.winner = null;\r\n        this.winSegments = [];\r\n    }\r\n    isOutOfBounds([A, B]) {\r\n        if (A < 0 || A >= this.size ||\r\n            B < 0 || B >= this.size)\r\n            return true;\r\n        return false;\r\n    }\r\n    revert() {\r\n        const move = this.history.pop();\r\n        if (!move)\r\n            return;\r\n        const { X, Y } = move;\r\n        this.board[X][Y] = null;\r\n        this.winner = null;\r\n        this.winSegments = [];\r\n        this.activePlayer = this.activePlayer === 'O' ? 'X' : 'O';\r\n    }\r\n    move(move, side = this.activePlayer) {\r\n        const { X, Y } = move;\r\n        if (this.isOutOfBounds([X, Y]) ||\r\n            this.winner)\r\n            return;\r\n        this.board[X][Y] = side;\r\n        this.activePlayer = side === 'O' ? 'X' : 'O';\r\n        this.history.push(move);\r\n        this.checkForWinner([X, Y]);\r\n    }\r\n    updateState(state) {\r\n        this.board = structuredClone(state.board);\r\n        this.activePlayer = state.activePlayer;\r\n        this.checkForWinner();\r\n    }\r\n    isDraw() {\r\n        for (let i = 0; i < this.size; i++) {\r\n            for (let j = 0; j < this.size; j++) {\r\n                if (!this.board[i][j])\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    checkForWinner(lastMove) {\r\n        if (this.isDraw()) {\r\n            this.winner = 'draw';\r\n            return;\r\n        }\r\n        if (!lastMove) {\r\n            for (let [rowIndex, row] of Object.entries(this.board)) {\r\n                for (let [squareIndex, square] of Object.entries(row)) {\r\n                    this.checkForWinner([+rowIndex, +squareIndex]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.isOutOfBounds(lastMove))\r\n            return;\r\n        const [X, Y] = lastMove;\r\n        if (this.board[X][Y] === null)\r\n            return;\r\n        const player = this.board[X][Y];\r\n        this.dirs.forEach(dir => {\r\n            const [A, B] = this.checkDir(dir[0], [X, Y], player);\r\n            const [C, D] = this.checkDir(dir[1], [X, Y], player);\r\n            const sequenceLength = Math.max(Math.abs(A - C), Math.abs(B - D)) + 1;\r\n            if (sequenceLength >= this.winCondition) {\r\n                this.winner = player;\r\n                this.winSegments.push([[A, B], [C, D]]);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.TicTacToeGame = TicTacToeGame;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.UTicTacToeGame = void 0;\r\nconst ticTacToe_1 = require(\"./ticTacToe\");\r\nclass UTicTacToeGame {\r\n    constructor(startingSide = 'O') {\r\n        this.createNullMatrix = () => {\r\n            return new Array(3).fill(null).map(() => {\r\n                return new Array(3).fill(null);\r\n            });\r\n        };\r\n        this.board = this.initBoard(startingSide);\r\n        this.segmentInstance = new ticTacToe_1.TicTacToeGame(3, 3, startingSide);\r\n        this.activeSegment = null;\r\n        this.activePlayer = startingSide;\r\n        this.winner = null;\r\n    }\r\n    get state() {\r\n        const board = this.createNullMatrix();\r\n        let segmentBoard = this.createNullMatrix();\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                board[i][j] = this.board[i][j].state.board;\r\n                segmentBoard[i][j] = this.board[i][j].state.winner;\r\n            }\r\n        }\r\n        return structuredClone({\r\n            board,\r\n            segmentBoard,\r\n            winner: this.winner,\r\n            activePlayer: this.activePlayer,\r\n            activeSegment: this.activeSegment\r\n        });\r\n    }\r\n    // export interface IUTicTacToeState {\r\n    //     board: ('X' | 'O' | null)[][][][];\r\n    //     segmentBoard: ('X' | 'O' | 'draw' | null)[][];\r\n    //     activeSegment: [number, number] | null;\r\n    //     activePlayer: 'X' | 'O';\r\n    //     winner: 'X' | 'O' | 'draw' | null;\r\n    // }\r\n    updateState(state) {\r\n        const newState = structuredClone(state);\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                this.board[i][j].updateState({\r\n                    board: newState.board[i][j],\r\n                    activePlayer: newState.activePlayer,\r\n                    winner: null,\r\n                    winSegments: []\r\n                });\r\n                const winner = this.board[i][j].winner;\r\n                if (winner === 'O' || winner === 'X') {\r\n                    this.segmentInstance.move({ X: i, Y: j }, winner);\r\n                    this.winner = this.segmentInstance.winner;\r\n                }\r\n            }\r\n        }\r\n        this.activePlayer = newState.activePlayer;\r\n        this.activeSegment = newState.activeSegment;\r\n    }\r\n    resetState(startingSide = 'O') {\r\n        this.board = this.initBoard(this.activePlayer);\r\n        this.segmentInstance = new ticTacToe_1.TicTacToeGame(3, 3, this.activePlayer);\r\n        this.activeSegment = null;\r\n        this.activePlayer = startingSide;\r\n        this.winner = null;\r\n    }\r\n    initBoard(startingSide) {\r\n        return new Array(3).fill(null).map(() => {\r\n            return new Array(3).fill(null).map(() => {\r\n                return new ticTacToe_1.TicTacToeGame(3, 3, startingSide);\r\n            });\r\n        });\r\n    }\r\n    isDraw() {\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                if (this.board[i][j].state.winner === null)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    move(move) {\r\n        const { SX, SY, X, Y } = move;\r\n        const AS = this.activeSegment;\r\n        if (AS && (SX !== AS[0] || SY !== AS[1]))\r\n            if (this.board[SX][SY].state.board[X][Y])\r\n                return;\r\n        if (this.board[SX][SY].winner)\r\n            return;\r\n        this.board[SX][SY].move({ X, Y }, this.activePlayer);\r\n        this.activePlayer = this.activePlayer === 'O' ? 'X' : 'O';\r\n        const segmentWinner = this.board[SX][SY].state.winner;\r\n        if (segmentWinner === 'O' || segmentWinner === 'X')\r\n            this.segmentInstance.move({ X: SX, Y: SY }, segmentWinner);\r\n        this.winner = this.segmentInstance.winner;\r\n        if (this.isDraw())\r\n            this.winner = 'draw';\r\n        if (this.winner)\r\n            return;\r\n        if (this.segmentInstance.state.board[X][Y])\r\n            this.activeSegment = null;\r\n        else\r\n            (this.activeSegment = [X, Y]);\r\n    }\r\n}\r\nexports.UTicTacToeGame = UTicTacToeGame;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./types/types\"), exports);\r\n__exportStar(require(\"./gameLogic/ticTacToe\"), exports);\r\n__exportStar(require(\"./gameLogic/chess\"), exports);\r\n__exportStar(require(\"./gameLogic/uTicTacToe\"), exports);\r\n__exportStar(require(\"./types/types\"), exports);\r\n__exportStar(require(\"./types/sockets\"), exports);\r\n__exportStar(require(\"./AI/TicTacToeAI\"), exports);\r\n__exportStar(require(\"./AI/UTicTacToeAI\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["Object","defineProperty","exports","value","suggestTicTacToeMove","getMaxLineLength","ticTacToe_1","require","isOutOfBounds","size","X","Y","lines","i","origin","board","maxLength","forEach","line","length","side","dir","pos","getLineLength","Math","max","evaluateState","scoreX","scoreO","row","square","isBoardEmpty","j","isMoveViable","isPosNonEmpty","Boolean","activePlayer","winCondition","floor","skill","Infinity","game","TicTacToeGame","updateState","structuredClone","winner","winSegments","minimax","instance","maximizing","isFirstIteration","alpha","beta","state","output","revert","viableMoves","push","bestMove","move","min","suggestUTicTacToeMove","TicTacToeAI_1","activeSegment","segmentBoard","SX","SY","potentialSegments","SRow","SSquare","coord","randIndex","random","ChessGame","this","createDefaulState","createBoard","castlingAvailable","w","left","right","b","figuresTaken","diagonal","orthogonal","knight","pieceDirs","k","q","r","n","p","e","history","stateList","currentIndex","halfmoveClock","convertCoord","boardLetters","numericToConventional","String","conventionalToNumeric","indexOf","lastMove","positions","rowIndex","emptyCount","piece","toUpperCase","castling","enPassant","to","distance","abs","from","AP","moves","getPotentialMoves","boardSave","encodeBoard","A","B","_move","isCheck","filter","decodeBoard","checkForCastling","legalMoves","getLegalMoves","isLegal","C","D","opponent","pieceCaptured","checkForWinner","newState","addToHistory","stateClone","index","splice","newIndex","kingCoord","getKingCoord","isPosEndangered","APSide","canPlayerMove","check","encodedBoard","pieces","split","Array","fill","map","pieceIndex","column","movingPiece","list","moveLimit","getPawnPotentialMoves","movesInDir","getMovesInDir","enemy","entries","moveInDir","limit","startingSide","dirs","checkDir","prevMove","initNewBoard","_","Error","pop","isDraw","player","squareIndex","UTicTacToeGame","createNullMatrix","initBoard","segmentInstance","AS","segmentWinner","__createBinding","create","o","m","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","prototype","hasOwnProperty","call","module","arr","len","arr2","isArray","arrayLikeToArray","Constructor","TypeError","toPropertyKey","_defineProperties","target","props","descriptor","key","protoProps","staticProps","unsupportedIterableToArray","allowArrayLike","it","Symbol","iterator","F","s","done","_e","f","err","normalCompletion","didErr","step","next","_e2","iter","_i","_s","_x","_r","_arr","_n","_d","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","_typeof","input","hint","prim","toPrimitive","res","Number","arg","obj","constructor","minLen","toString","slice","name","test"],"sourceRoot":""}